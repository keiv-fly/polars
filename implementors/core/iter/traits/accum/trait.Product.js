(function() {var implementors = {};
implementors["num_bigint"] = [{"text":"impl&lt;T&gt; Product&lt;T&gt; for BigInt <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;BigInt: Mul&lt;T, Output = BigInt&gt;,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; Product&lt;T&gt; for BigUint <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;BigUint: Mul&lt;T, Output = BigUint&gt;,&nbsp;</span>","synthetic":false,"types":[]}];
implementors["num_complex"] = [{"text":"impl&lt;T:&nbsp;Num + Clone&gt; Product&lt;Complex&lt;T&gt;&gt; for Complex&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a, T:&nbsp;'a + Num + Clone&gt; Product&lt;&amp;'a Complex&lt;T&gt;&gt; for Complex&lt;T&gt;","synthetic":false,"types":[]}];
implementors["num_rational"] = [{"text":"impl&lt;T:&nbsp;Integer + Clone&gt; Product&lt;Ratio&lt;T&gt;&gt; for Ratio&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a, T:&nbsp;Integer + Clone&gt; Product&lt;&amp;'a Ratio&lt;T&gt;&gt; for Ratio&lt;T&gt;","synthetic":false,"types":[]}];
implementors["ordered_float"] = [{"text":"impl&lt;T:&nbsp;Float + Product&gt; Product&lt;NotNan&lt;T&gt;&gt; for NotNan&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a, T:&nbsp;Float + Product&gt; Product&lt;&amp;'a NotNan&lt;T&gt;&gt; for NotNan&lt;T&gt;","synthetic":false,"types":[]}];
implementors["packed_simd_2"] = [{"text":"impl Product&lt;Simd&lt;[i8; 2]&gt;&gt; for i8x2","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Product&lt;&amp;'a Simd&lt;[i8; 2]&gt;&gt; for i8x2","synthetic":false,"types":[]},{"text":"impl Product&lt;Simd&lt;[u8; 2]&gt;&gt; for u8x2","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Product&lt;&amp;'a Simd&lt;[u8; 2]&gt;&gt; for u8x2","synthetic":false,"types":[]},{"text":"impl Product&lt;Simd&lt;[i8; 4]&gt;&gt; for i8x4","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Product&lt;&amp;'a Simd&lt;[i8; 4]&gt;&gt; for i8x4","synthetic":false,"types":[]},{"text":"impl Product&lt;Simd&lt;[u8; 4]&gt;&gt; for u8x4","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Product&lt;&amp;'a Simd&lt;[u8; 4]&gt;&gt; for u8x4","synthetic":false,"types":[]},{"text":"impl Product&lt;Simd&lt;[i16; 2]&gt;&gt; for i16x2","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Product&lt;&amp;'a Simd&lt;[i16; 2]&gt;&gt; for i16x2","synthetic":false,"types":[]},{"text":"impl Product&lt;Simd&lt;[u16; 2]&gt;&gt; for u16x2","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Product&lt;&amp;'a Simd&lt;[u16; 2]&gt;&gt; for u16x2","synthetic":false,"types":[]},{"text":"impl Product&lt;Simd&lt;[i8; 8]&gt;&gt; for i8x8","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Product&lt;&amp;'a Simd&lt;[i8; 8]&gt;&gt; for i8x8","synthetic":false,"types":[]},{"text":"impl Product&lt;Simd&lt;[u8; 8]&gt;&gt; for u8x8","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Product&lt;&amp;'a Simd&lt;[u8; 8]&gt;&gt; for u8x8","synthetic":false,"types":[]},{"text":"impl Product&lt;Simd&lt;[i16; 4]&gt;&gt; for i16x4","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Product&lt;&amp;'a Simd&lt;[i16; 4]&gt;&gt; for i16x4","synthetic":false,"types":[]},{"text":"impl Product&lt;Simd&lt;[u16; 4]&gt;&gt; for u16x4","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Product&lt;&amp;'a Simd&lt;[u16; 4]&gt;&gt; for u16x4","synthetic":false,"types":[]},{"text":"impl Product&lt;Simd&lt;[i32; 2]&gt;&gt; for i32x2","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Product&lt;&amp;'a Simd&lt;[i32; 2]&gt;&gt; for i32x2","synthetic":false,"types":[]},{"text":"impl Product&lt;Simd&lt;[u32; 2]&gt;&gt; for u32x2","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Product&lt;&amp;'a Simd&lt;[u32; 2]&gt;&gt; for u32x2","synthetic":false,"types":[]},{"text":"impl Product&lt;Simd&lt;[f32; 2]&gt;&gt; for f32x2","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Product&lt;&amp;'a Simd&lt;[f32; 2]&gt;&gt; for f32x2","synthetic":false,"types":[]},{"text":"impl Product&lt;Simd&lt;[i8; 16]&gt;&gt; for i8x16","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Product&lt;&amp;'a Simd&lt;[i8; 16]&gt;&gt; for i8x16","synthetic":false,"types":[]},{"text":"impl Product&lt;Simd&lt;[u8; 16]&gt;&gt; for u8x16","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Product&lt;&amp;'a Simd&lt;[u8; 16]&gt;&gt; for u8x16","synthetic":false,"types":[]},{"text":"impl Product&lt;Simd&lt;[i16; 8]&gt;&gt; for i16x8","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Product&lt;&amp;'a Simd&lt;[i16; 8]&gt;&gt; for i16x8","synthetic":false,"types":[]},{"text":"impl Product&lt;Simd&lt;[u16; 8]&gt;&gt; for u16x8","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Product&lt;&amp;'a Simd&lt;[u16; 8]&gt;&gt; for u16x8","synthetic":false,"types":[]},{"text":"impl Product&lt;Simd&lt;[i32; 4]&gt;&gt; for i32x4","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Product&lt;&amp;'a Simd&lt;[i32; 4]&gt;&gt; for i32x4","synthetic":false,"types":[]},{"text":"impl Product&lt;Simd&lt;[u32; 4]&gt;&gt; for u32x4","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Product&lt;&amp;'a Simd&lt;[u32; 4]&gt;&gt; for u32x4","synthetic":false,"types":[]},{"text":"impl Product&lt;Simd&lt;[f32; 4]&gt;&gt; for f32x4","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Product&lt;&amp;'a Simd&lt;[f32; 4]&gt;&gt; for f32x4","synthetic":false,"types":[]},{"text":"impl Product&lt;Simd&lt;[i64; 2]&gt;&gt; for i64x2","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Product&lt;&amp;'a Simd&lt;[i64; 2]&gt;&gt; for i64x2","synthetic":false,"types":[]},{"text":"impl Product&lt;Simd&lt;[u64; 2]&gt;&gt; for u64x2","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Product&lt;&amp;'a Simd&lt;[u64; 2]&gt;&gt; for u64x2","synthetic":false,"types":[]},{"text":"impl Product&lt;Simd&lt;[f64; 2]&gt;&gt; for f64x2","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Product&lt;&amp;'a Simd&lt;[f64; 2]&gt;&gt; for f64x2","synthetic":false,"types":[]},{"text":"impl Product&lt;Simd&lt;[i128; 1]&gt;&gt; for i128x1","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Product&lt;&amp;'a Simd&lt;[i128; 1]&gt;&gt; for i128x1","synthetic":false,"types":[]},{"text":"impl Product&lt;Simd&lt;[u128; 1]&gt;&gt; for u128x1","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Product&lt;&amp;'a Simd&lt;[u128; 1]&gt;&gt; for u128x1","synthetic":false,"types":[]},{"text":"impl Product&lt;Simd&lt;[i8; 32]&gt;&gt; for i8x32","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Product&lt;&amp;'a Simd&lt;[i8; 32]&gt;&gt; for i8x32","synthetic":false,"types":[]},{"text":"impl Product&lt;Simd&lt;[u8; 32]&gt;&gt; for u8x32","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Product&lt;&amp;'a Simd&lt;[u8; 32]&gt;&gt; for u8x32","synthetic":false,"types":[]},{"text":"impl Product&lt;Simd&lt;[i16; 16]&gt;&gt; for i16x16","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Product&lt;&amp;'a Simd&lt;[i16; 16]&gt;&gt; for i16x16","synthetic":false,"types":[]},{"text":"impl Product&lt;Simd&lt;[u16; 16]&gt;&gt; for u16x16","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Product&lt;&amp;'a Simd&lt;[u16; 16]&gt;&gt; for u16x16","synthetic":false,"types":[]},{"text":"impl Product&lt;Simd&lt;[i32; 8]&gt;&gt; for i32x8","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Product&lt;&amp;'a Simd&lt;[i32; 8]&gt;&gt; for i32x8","synthetic":false,"types":[]},{"text":"impl Product&lt;Simd&lt;[u32; 8]&gt;&gt; for u32x8","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Product&lt;&amp;'a Simd&lt;[u32; 8]&gt;&gt; for u32x8","synthetic":false,"types":[]},{"text":"impl Product&lt;Simd&lt;[f32; 8]&gt;&gt; for f32x8","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Product&lt;&amp;'a Simd&lt;[f32; 8]&gt;&gt; for f32x8","synthetic":false,"types":[]},{"text":"impl Product&lt;Simd&lt;[i64; 4]&gt;&gt; for i64x4","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Product&lt;&amp;'a Simd&lt;[i64; 4]&gt;&gt; for i64x4","synthetic":false,"types":[]},{"text":"impl Product&lt;Simd&lt;[u64; 4]&gt;&gt; for u64x4","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Product&lt;&amp;'a Simd&lt;[u64; 4]&gt;&gt; for u64x4","synthetic":false,"types":[]},{"text":"impl Product&lt;Simd&lt;[f64; 4]&gt;&gt; for f64x4","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Product&lt;&amp;'a Simd&lt;[f64; 4]&gt;&gt; for f64x4","synthetic":false,"types":[]},{"text":"impl Product&lt;Simd&lt;[i128; 2]&gt;&gt; for i128x2","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Product&lt;&amp;'a Simd&lt;[i128; 2]&gt;&gt; for i128x2","synthetic":false,"types":[]},{"text":"impl Product&lt;Simd&lt;[u128; 2]&gt;&gt; for u128x2","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Product&lt;&amp;'a Simd&lt;[u128; 2]&gt;&gt; for u128x2","synthetic":false,"types":[]},{"text":"impl Product&lt;Simd&lt;[i8; 64]&gt;&gt; for i8x64","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Product&lt;&amp;'a Simd&lt;[i8; 64]&gt;&gt; for i8x64","synthetic":false,"types":[]},{"text":"impl Product&lt;Simd&lt;[u8; 64]&gt;&gt; for u8x64","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Product&lt;&amp;'a Simd&lt;[u8; 64]&gt;&gt; for u8x64","synthetic":false,"types":[]},{"text":"impl Product&lt;Simd&lt;[i16; 32]&gt;&gt; for i16x32","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Product&lt;&amp;'a Simd&lt;[i16; 32]&gt;&gt; for i16x32","synthetic":false,"types":[]},{"text":"impl Product&lt;Simd&lt;[u16; 32]&gt;&gt; for u16x32","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Product&lt;&amp;'a Simd&lt;[u16; 32]&gt;&gt; for u16x32","synthetic":false,"types":[]},{"text":"impl Product&lt;Simd&lt;[i32; 16]&gt;&gt; for i32x16","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Product&lt;&amp;'a Simd&lt;[i32; 16]&gt;&gt; for i32x16","synthetic":false,"types":[]},{"text":"impl Product&lt;Simd&lt;[u32; 16]&gt;&gt; for u32x16","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Product&lt;&amp;'a Simd&lt;[u32; 16]&gt;&gt; for u32x16","synthetic":false,"types":[]},{"text":"impl Product&lt;Simd&lt;[f32; 16]&gt;&gt; for f32x16","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Product&lt;&amp;'a Simd&lt;[f32; 16]&gt;&gt; for f32x16","synthetic":false,"types":[]},{"text":"impl Product&lt;Simd&lt;[i64; 8]&gt;&gt; for i64x8","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Product&lt;&amp;'a Simd&lt;[i64; 8]&gt;&gt; for i64x8","synthetic":false,"types":[]},{"text":"impl Product&lt;Simd&lt;[u64; 8]&gt;&gt; for u64x8","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Product&lt;&amp;'a Simd&lt;[u64; 8]&gt;&gt; for u64x8","synthetic":false,"types":[]},{"text":"impl Product&lt;Simd&lt;[f64; 8]&gt;&gt; for f64x8","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Product&lt;&amp;'a Simd&lt;[f64; 8]&gt;&gt; for f64x8","synthetic":false,"types":[]},{"text":"impl Product&lt;Simd&lt;[i128; 4]&gt;&gt; for i128x4","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Product&lt;&amp;'a Simd&lt;[i128; 4]&gt;&gt; for i128x4","synthetic":false,"types":[]},{"text":"impl Product&lt;Simd&lt;[u128; 4]&gt;&gt; for u128x4","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Product&lt;&amp;'a Simd&lt;[u128; 4]&gt;&gt; for u128x4","synthetic":false,"types":[]},{"text":"impl Product&lt;Simd&lt;[isize; 2]&gt;&gt; for isizex2","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Product&lt;&amp;'a Simd&lt;[isize; 2]&gt;&gt; for isizex2","synthetic":false,"types":[]},{"text":"impl Product&lt;Simd&lt;[usize; 2]&gt;&gt; for usizex2","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Product&lt;&amp;'a Simd&lt;[usize; 2]&gt;&gt; for usizex2","synthetic":false,"types":[]},{"text":"impl Product&lt;Simd&lt;[isize; 4]&gt;&gt; for isizex4","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Product&lt;&amp;'a Simd&lt;[isize; 4]&gt;&gt; for isizex4","synthetic":false,"types":[]},{"text":"impl Product&lt;Simd&lt;[usize; 4]&gt;&gt; for usizex4","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Product&lt;&amp;'a Simd&lt;[usize; 4]&gt;&gt; for usizex4","synthetic":false,"types":[]},{"text":"impl Product&lt;Simd&lt;[isize; 8]&gt;&gt; for isizex8","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Product&lt;&amp;'a Simd&lt;[isize; 8]&gt;&gt; for isizex8","synthetic":false,"types":[]},{"text":"impl Product&lt;Simd&lt;[usize; 8]&gt;&gt; for usizex8","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Product&lt;&amp;'a Simd&lt;[usize; 8]&gt;&gt; for usizex8","synthetic":false,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()