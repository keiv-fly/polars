(function() {var implementors = {};
implementors["crossterm"] = [{"text":"impl UpperHex for KeyModifiers","synthetic":false,"types":[]}];
implementors["itertools"] = [{"text":"impl&lt;'a, I&gt; UpperHex for Format&lt;'a, I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Iterator,<br>&nbsp;&nbsp;&nbsp;&nbsp;I::Item: UpperHex,&nbsp;</span>","synthetic":false,"types":[]}];
implementors["num_bigint"] = [{"text":"impl UpperHex for BigInt","synthetic":false,"types":[]},{"text":"impl UpperHex for BigUint","synthetic":false,"types":[]}];
implementors["num_complex"] = [{"text":"impl&lt;T&gt; UpperHex for Complex&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UpperHex + Num + PartialOrd + Clone,&nbsp;</span>","synthetic":false,"types":[]}];
implementors["num_rational"] = [{"text":"impl&lt;T:&nbsp;UpperHex + Clone + Integer&gt; UpperHex for Ratio&lt;T&gt;","synthetic":false,"types":[]}];
implementors["packed_simd_2"] = [{"text":"impl UpperHex for i8x2","synthetic":false,"types":[]},{"text":"impl UpperHex for u8x2","synthetic":false,"types":[]},{"text":"impl UpperHex for i8x4","synthetic":false,"types":[]},{"text":"impl UpperHex for u8x4","synthetic":false,"types":[]},{"text":"impl UpperHex for i16x2","synthetic":false,"types":[]},{"text":"impl UpperHex for u16x2","synthetic":false,"types":[]},{"text":"impl UpperHex for i8x8","synthetic":false,"types":[]},{"text":"impl UpperHex for u8x8","synthetic":false,"types":[]},{"text":"impl UpperHex for i16x4","synthetic":false,"types":[]},{"text":"impl UpperHex for u16x4","synthetic":false,"types":[]},{"text":"impl UpperHex for i32x2","synthetic":false,"types":[]},{"text":"impl UpperHex for u32x2","synthetic":false,"types":[]},{"text":"impl UpperHex for i8x16","synthetic":false,"types":[]},{"text":"impl UpperHex for u8x16","synthetic":false,"types":[]},{"text":"impl UpperHex for i16x8","synthetic":false,"types":[]},{"text":"impl UpperHex for u16x8","synthetic":false,"types":[]},{"text":"impl UpperHex for i32x4","synthetic":false,"types":[]},{"text":"impl UpperHex for u32x4","synthetic":false,"types":[]},{"text":"impl UpperHex for i64x2","synthetic":false,"types":[]},{"text":"impl UpperHex for u64x2","synthetic":false,"types":[]},{"text":"impl UpperHex for i128x1","synthetic":false,"types":[]},{"text":"impl UpperHex for u128x1","synthetic":false,"types":[]},{"text":"impl UpperHex for i8x32","synthetic":false,"types":[]},{"text":"impl UpperHex for u8x32","synthetic":false,"types":[]},{"text":"impl UpperHex for i16x16","synthetic":false,"types":[]},{"text":"impl UpperHex for u16x16","synthetic":false,"types":[]},{"text":"impl UpperHex for i32x8","synthetic":false,"types":[]},{"text":"impl UpperHex for u32x8","synthetic":false,"types":[]},{"text":"impl UpperHex for i64x4","synthetic":false,"types":[]},{"text":"impl UpperHex for u64x4","synthetic":false,"types":[]},{"text":"impl UpperHex for i128x2","synthetic":false,"types":[]},{"text":"impl UpperHex for u128x2","synthetic":false,"types":[]},{"text":"impl UpperHex for i8x64","synthetic":false,"types":[]},{"text":"impl UpperHex for u8x64","synthetic":false,"types":[]},{"text":"impl UpperHex for i16x32","synthetic":false,"types":[]},{"text":"impl UpperHex for u16x32","synthetic":false,"types":[]},{"text":"impl UpperHex for i32x16","synthetic":false,"types":[]},{"text":"impl UpperHex for u32x16","synthetic":false,"types":[]},{"text":"impl UpperHex for i64x8","synthetic":false,"types":[]},{"text":"impl UpperHex for u64x8","synthetic":false,"types":[]},{"text":"impl UpperHex for i128x4","synthetic":false,"types":[]},{"text":"impl UpperHex for u128x4","synthetic":false,"types":[]},{"text":"impl UpperHex for isizex2","synthetic":false,"types":[]},{"text":"impl UpperHex for usizex2","synthetic":false,"types":[]},{"text":"impl UpperHex for isizex4","synthetic":false,"types":[]},{"text":"impl UpperHex for usizex4","synthetic":false,"types":[]},{"text":"impl UpperHex for isizex8","synthetic":false,"types":[]},{"text":"impl UpperHex for usizex8","synthetic":false,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()